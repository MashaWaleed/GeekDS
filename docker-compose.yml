services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cms
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_MAX_CONNECTIONS: 200
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./cms_schema.sql:/docker-entrypoint-initdb.d/01-cms_schema.sql:ro
      - ./add_folders.sql:/docker-entrypoint-initdb.d/02-add_folders.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cms"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build: ./backend
    restart: always
    volumes:
      - ./media:/app/media
      - uploads:/app/uploads
      - screenshots:/app/screenshots
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/cms
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:5000"
    deploy:
      resources:
        limits:
          memory: 1GB
          cpus: '0.5'

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./media:/app/media
      - uploads:/app/uploads
      - screenshots:/app/screenshots
    depends_on:
      - backend

  frontend:
    build: ./frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - nginx

volumes:
  db_data:
  redis_data:
  uploads:
  screenshots: 